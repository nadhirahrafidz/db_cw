version: "3"

services:
  pre-processing:
    image: nadhirahrafidz98/team_11:preprocess
    volumes:
      - ./init/mysql_data/ml-latest-small:/init/mysql_data/ml-latest-small
      - ./init/mysql_data/personality-isf2018:/init/mysql_data/personality-isf2018
      - ./init/mysql_data/scraped_data:/init/mysql_data/scraped_data
      - ./init/mysql_data/final_data:/init/mysql_data/final_data

  mySQLcontainer:
    image: mysql:8.0
    environment:
      - MYSQL_DATABASE=MovieLens
      - MYSQL_ROOT_PASSWORD=team11
    volumes:
      - ./init/db_setup:/docker-entrypoint-initdb.d/
      - ./init/mysql_data:/init/data
    command: --secure-file-priv="init/data"
    ports:
      - 3406:3306
    depends_on:
      - pre-processing

  websvr_container:
    image: nadhirahrafidz98/team_11:websvr
    deploy:
      replicas: 1
    volumes:
      - ./LAMPcontainer/data:/var/www/html
    ports:
      - 80:80
    links:
      - mySQLcontainer
    depends_on:
      - mySQLcontainer
      # - redis

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: PMAcontainer
    environment:
      - PMA_HOST=mySQLcontainer
      - MYSQL_ROOT_PASSWORD=team11
      - PMA_PORT=3306
    ports:
      - 8080:80

  frontend:
    image: nadhirahrafidz98/team_11:frontend
    deploy:
      replicas: 1
    volumes:
      - "./frontend:/frontend"
    ports:
      - 3000:3000
    environment:
      - CHOKIDAR_USEPOLLING=true

  visualizer:
    image: dockersamples/visualizer
    deploy:
      placement:
        constraints: [node.role == manager]
    ports:
      - 8081:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

#   composer:
#     image: composer:1.9
#     command: ["composer", "install"]
#     run: ["composer", "require", "predis/predis"]

#   redis:
#     image: redis:4.0
#     container_name: app_redis
#     ports:
#       - "6382:6379"
#     # networks:
#     #   networks:
#     #   - app-network
# networks:
#   app-network:
#     driver: "bridge"
