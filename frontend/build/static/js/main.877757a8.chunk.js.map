{"version":3,"sources":["components/Title.js","components/Abstract.js","components/Database.js","components/FastAPI.js","components/FrontEnd.js","components/Scraper.js","components/Scalability.js","components/Footer.js","components/App.js","serviceWorker.js","index.js"],"names":["Title","className","this","props","text","React","Component","Abstract","AbstractText","Database","FastAPI","FrontEnd","Scraper","Scalability","Footer","App","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","to","NavItem","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"mhBAaeA,G,6KARX,OACE,yBAAKC,UAAU,aACb,wBAAIA,UAAU,UAAUC,KAAKC,MAAMC,W,GAJvBC,IAAMC,Y,QC0BXC,E,uKAvBP,OACI,6BACI,kBAAC,EAAD,CAAOH,KAAK,+BAEZ,yBAAKH,UAAU,QACX,yBAAKA,UAAW,gBACZ,4CACA,2BAAIO,EAAY,eAGpB,yBAAKP,UAAW,WACZ,uCACA,2BAAIO,EAAY,e,GAdjBH,IAAMC,WCSdG,E,uKARP,OACI,6BACI,kBAAC,EAAD,CAAOL,KAAK,kB,GAJLC,IAAMC,WCUdI,E,uKARP,OACI,6BACI,kBAAC,EAAD,CAAON,KAAK,iB,GAJNC,IAAMC,WCUbK,E,uKARP,OACI,6BACI,kBAAC,EAAD,CAAOP,KAAK,mB,GAJLC,IAAMC,WCUdM,E,uKARP,OACI,6BACI,kBAAC,EAAD,CAAOR,KAAK,qB,GAJNC,IAAMC,WCUbO,E,uKARP,OACI,6BACI,kBAAC,EAAD,CAAOT,KAAK,qB,GAJFC,IAAMC,WCWjBQ,G,6KATX,OACE,yBAAKb,UAAU,oBAAf,uI,GAHeI,IAAMC,YC2DZS,MA5Cf,WACE,OACE,kBAAC,gBAAD,KACE,kBAACC,EAAA,EAAD,CAAQf,UAAU,cAAcgB,GAAG,QAAQC,OAAO,MAC9C,kBAACF,EAAA,EAAOG,MAAR,sBACA,kBAACH,EAAA,EAAOI,OAAR,CAAeC,gBAAc,qBAC7B,kBAACL,EAAA,EAAOM,SAAR,CAAiBC,GAAG,oBAClB,kBAACC,EAAA,EAAD,CAAKvB,UAAU,WACb,kBAAC,gBAAD,CAAeA,UAAU,gBAAgBwB,GAAG,KAC1C,kBAACC,EAAA,EAAD,kBAEF,kBAAC,gBAAD,CAAezB,UAAU,gBAAgBwB,GAAG,YAC1C,kBAACC,EAAA,EAAD,aAEF,kBAAC,gBAAD,CAAezB,UAAU,gBAAgBwB,GAAG,aAC1C,kBAACC,EAAA,EAAD,kBAEF,kBAAC,gBAAD,CAAezB,UAAU,gBAAgBwB,GAAG,aAC1C,kBAACC,EAAA,EAAD,mBAEF,kBAAC,gBAAD,CAAezB,UAAU,gBAAgBwB,GAAG,gBAC1C,kBAACC,EAAA,EAAD,qBAEF,kBAAC,gBAAD,CAAezB,UAAU,gBAAgBwB,GAAG,YAC1C,kBAACC,EAAA,EAAD,wBAMV,kBAAC,IAAD,CAAQzB,UAAU,gBAChB,kBAAC,IAAD,CAAO0B,KAAK,YAAYC,UAAWnB,IACnC,kBAAC,IAAD,CAAOkB,KAAK,WAAWC,UAAWlB,IAClC,kBAAC,IAAD,CAAOiB,KAAK,YAAYC,UAAWjB,IACnC,kBAAC,IAAD,CAAOgB,KAAK,WAAWC,UAAWhB,IAClC,kBAAC,IAAD,CAAOe,KAAK,eAAeC,UAAWf,IACtC,kBAAC,IAAD,CAAOc,KAAK,GAAGC,UAAWrB,KAG5B,kBAAC,EAAD,CAAQN,UAAU,aC7CJ4B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.877757a8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"../styles/Title.css\";\n\nclass Title extends React.Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <h1 className=\"header\">{this.props.text}</h1>\n      </div>\n    );\n  }\n}\n\nexport default Title;\n","import React, { Component } from \"react\";\nimport Title from \"./Title\"\nimport AbstractText from \"../Data/AbstractText\";\n\nclass Abstract extends React.Component{\n    render(){\n        return(\n            <div>\n                <Title text=\"Marshall Wace presentation\"></Title>\n\n                <div className=\"Body\">\n                    <div className= \"introduction\">\n                        <h2>Introduction</h2>\n                        <p>{AbstractText[\"introduction\"]}</p>\n                    </div>\n\n                    <div className= \"diagram\">\n                        <h2>Diagram</h2>\n                        <p>{AbstractText[\"system\"]}</p>\n                    </div>\n                    \n\n                </div>\n                \n            </div>\n        )\n    }\n}\n\nexport default Abstract","import React, { Component } from \"react\";\nimport Title from \"./Title\"\n\nclass Database extends React.Component{\n    render(){\n        return(\n            <div>\n                <Title text=\"Database\"></Title>\n            </div>\n        )\n    }\n}\n\nexport default Database","import React, { Component } from \"react\";\nimport Title from \"./Title\"\n\nclass FastAPI extends React.Component{\n    render(){\n        return(\n            <div>\n                <Title text=\"FastAPI\"></Title>\n            </div>\n        )\n    }\n}\n\nexport default FastAPI","import React, { Component } from \"react\";\nimport Title from \"./Title\"\n\nclass FrontEnd extends React.Component{\n    render(){\n        return(\n            <div>\n                <Title text=\"Front end\"></Title>\n            </div>\n        )\n    }\n}\n\nexport default FrontEnd","import React, { Component } from \"react\";\nimport Title from \"./Title\"\n\nclass Scraper extends React.Component{\n    render(){\n        return(\n            <div>\n                <Title text=\"Web Scraper\"></Title>\n            </div>\n        )\n    }\n}\n\nexport default Scraper","import React, { Component } from \"react\";\nimport Title from \"./Title\"\n\nclass Scalability extends React.Component{\n    render(){\n        return(\n            <div>\n                <Title text=\"Scalability\"></Title>\n            </div>\n        )\n    }\n}\n\nexport default Scalability","import React, { Component } from \"react\";\nimport \"../styles/Footer.css\";\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <div className=\"container-footer\">\n        I coded this webpage myself using React. All stylings were done by using\n        the react-bootstrap library components and my own CSS.\n      </div>\n    );\n  }\n}\n\nexport default Footer;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"../styles/App.css\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport { LinkContainer } from 'react-router-bootstrap'\nimport NavItem from \"react-bootstrap/esm/NavItem\";\n\n//components\nimport Abstract from \"./Abstract\"\nimport Database from \"./Database\"\nimport FastAPI from \"./FastAPI\"\nimport FrontEnd from \"./FrontEnd\"\nimport Scraper from \"./Scraper\"\nimport Scalability from \"./Scalability\"\nimport Footer from \"./Footer\";\n\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar className=\"main-navbar\" bg=\"light\" expand=\"lg\">\n          <Navbar.Brand>Sami Al Alawi</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <LinkContainer className=\"nav-link-text\" to=\"/\">\n                <NavItem>Abstract</NavItem>\n              </LinkContainer>\n              <LinkContainer className=\"nav-link-text\" to=\"/fastapi\">\n                <NavItem>API</NavItem>\n              </LinkContainer>\n              <LinkContainer className=\"nav-link-text\" to=\"/database\">\n                <NavItem>Database</NavItem>\n              </LinkContainer>\n              <LinkContainer className=\"nav-link-text\" to=\"/frontend\">\n                <NavItem>Front End</NavItem>\n              </LinkContainer>\n              <LinkContainer className=\"nav-link-text\" to=\"/scalability\">\n                <NavItem>Scalability</NavItem>\n              </LinkContainer>\n              <LinkContainer className=\"nav-link-text\" to=\"/scraper\">\n                <NavItem>Web Scraper</NavItem>\n              </LinkContainer>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n\n      <Switch className=\"main-content\"> \n        <Route path=\"/database\" component={Database} />\n        <Route path=\"/fastapi\" component={FastAPI} />\n        <Route path=\"/frontend\" component={FrontEnd} />\n        <Route path=\"/scraper\" component={Scraper} />\n        <Route path=\"/scalability\" component={Scalability} />\n        <Route path=\"\" component={Abstract} />\n      </Switch>\n\n      <Footer className=\"footer\"></Footer>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}