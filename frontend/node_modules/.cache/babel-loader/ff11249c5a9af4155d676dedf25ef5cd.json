{"ast":null,"code":"var _jsxFileName = \"/Users/samialalawi/Documents/UCL/year3/Databases/front end/lamp stack/src/components/Browse/Browse.js\";\nimport React, { Component } from \"react\";\nimport ReactPlayer from \"react-player\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Title from \"../Title\";\nimport AllMovies from \"../../Data/AllMovies\";\nimport \"../../styles/Abstract.css\";\n\nclass Browse extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movies: {},\n      singleDisplay: false,\n      selectedMovie: null\n    };\n  } //make sure to make the api call before the component is rendered. Use lifecycle hook\n\n\n  componentWillMount() {\n    this.setState({\n      movies: this.getData()\n    });\n  } //function to make api call. For now uses dummy data\n\n\n  getData() {\n    //can use fetch() then promise chaining\n    return AllMovies;\n  }\n\n  render() {\n    if (this.state.singleDisplay) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Title, {\n        text: \"Movies database\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"search\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"formBasicSearch\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }\n      }, \"Search for a movie\"), /*#__PURE__*/React.createElement(Form.Control, {\n        placeholder: \"Enter Search\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }\n      }, \"Submit\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"introduction\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }\n      }, \"Movie list\"))));\n    }\n  }\n\n}\n\nexport default Browse;","map":{"version":3,"sources":["/Users/samialalawi/Documents/UCL/year3/Databases/front end/lamp stack/src/components/Browse/Browse.js"],"names":["React","Component","ReactPlayer","Form","Button","Title","AllMovies","Browse","constructor","props","state","movies","singleDisplay","selectedMovie","componentWillMount","setState","getData","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AAEA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAO,2BAAP;;AAEA,MAAMC,MAAN,SAAqBP,KAAK,CAACC,SAA3B,CAAqC;AACnCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,EADG;AAEXC,MAAAA,aAAa,EAAE,KAFJ;AAGXC,MAAAA,aAAa,EAAE;AAHJ,KAAb;AAKD,GARkC,CAUnC;;;AACAC,EAAAA,kBAAkB,GAAG;AACnB,SAAKC,QAAL,CAAc;AACZJ,MAAAA,MAAM,EAAE,KAAKK,OAAL;AADI,KAAd;AAGD,GAfkC,CAiBnC;;;AACAA,EAAAA,OAAO,GAAG;AACR;AACA,WAAOV,SAAP;AACD;;AAEDW,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKP,KAAL,CAAWE,aAAf,EAA6B;AAC3B,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAKD,KAND,MAMO;AACP,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,iBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAGE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,QAAA,WAAW,EAAC,cAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,eAKE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAA0B,QAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,CADF,CADF,eAaE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CAbF,CAHF,CADF;AAuBG;AACJ;;AAvDkC;;AA0DrC,eAAeL,MAAf","sourcesContent":["import React, { Component } from \"react\";\nimport ReactPlayer from \"react-player\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nimport Title from \"../Title\";\nimport AllMovies from \"../../Data/AllMovies\";\nimport \"../../styles/Abstract.css\";\n\nclass Browse extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      movies: {},\n      singleDisplay: false,\n      selectedMovie: null\n    };\n  }\n\n  //make sure to make the api call before the component is rendered. Use lifecycle hook\n  componentWillMount() {\n    this.setState({\n      movies: this.getData(),\n    });\n  }\n\n  //function to make api call. For now uses dummy data\n  getData() {\n    //can use fetch() then promise chaining\n    return AllMovies;\n  }\n\n  render() {\n    if (this.state.singleDisplay){\n      return (\n        <div>\n\n        </div>\n      )\n    } else {\n    return (\n      <div>\n        <Title text=\"Movies database\"></Title>\n\n        <div className=\"Body\">\n          <div className=\"search\">\n            <Form>\n              <Form.Group controlId=\"formBasicSearch\">\n                <Form.Label>Search for a movie</Form.Label>\n                <Form.Control placeholder=\"Enter Search\" />\n              </Form.Group>\n              <Button variant=\"primary\" type=\"submit\">\n                Submit\n              </Button>\n            </Form>\n          </div>\n\n          <div className=\"introduction\">\n            <h2>Movie list</h2>\n          </div>\n\n        </div>\n      </div>\n    );}\n  }\n}\n\nexport default Browse;\n"]},"metadata":{},"sourceType":"module"}